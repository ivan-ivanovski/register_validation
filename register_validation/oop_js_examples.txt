
//objekt literal

const mojObjekat = {
	ime: 'Ivan',
	prezime: 'Ivanovski',

};


mojObjekat.ime = 15;
mojObjekat.prezime = "Peritosevski"
console.log(`${mojObjekat.ime} ${mojObjekat.prezime} -> Object Literal`);

//kloniranje na objekti

const Licnost = {
	licno_ime: 'Iva',
	getLicnoImeTelBroj: function() {
		console.log(`${this.licno_ime} - ${this.tel_broj} -> Object Clone`);
	}
}

let iva = Object.create(Licnost);
iva.tel_broj = '00001111222';
iva.getLicnoImeTelBroj();

//Object constractor
function objConst(ime, prezime){
	this.ime = ime,
	this.prezime = prezime,

	this.getIme = function (){
		console.log(`${ime}-${prezime} -> Object Constractor`);
	}
};
let obj = new objConst('Ivan', 'Ivanovski');
obj.getIme()


//Najdobar nacin e koristenje na klasi

class Osoba{
	constructor(licno_ime, licno_prezime, tel_broj, god){
		this.licno_ime = licno_ime;
		this.licno_prezime = licno_prezime;
		this.tel_broj = tel_broj;
		this.god = god;
	}

	getLicnoImeTelBroj(){
		console.log(`${this.licno_ime}-${this.licno_prezime}`);
	}
}
let osb1 = new Osoba("Ivan", "Ivanoski", "00221111", 19);
console.log(osb1);